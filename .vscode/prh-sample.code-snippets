{
	"prh-useMemo": {
		"scope": "javascript,typescript",
		"prefix": "prh-optionMerge",
		"body": [
			"const globalOptions = useContext(InternalContext);",
			"const _options = useMemo(() =>",
			"{",
			"    const opt = mergeOptions(globalOptions, options);",
			"    opt.disabled = checkDisable(opt?.disabled, defaultCheckDisable);",
			"    return opt;",
			"}, [options, globalOptions]);",
		],
		"description": "Basic version of memorized option merge function"
	},
	"prh-invokableFactory": {
		"scope": "javascript,typescript",
		"prefix": "prh-invokableFactory",
		"description": "Basic version of invokable factory callback",
		"body": [
			"const invokableFactory = useCallback(async (sp: SPFI) => {",
			"    return createInvokable(${1:sp.web});",
			"}, []);",
		]
	}
}